/* This styles is for preloading section */


@import url('https://fonts.googleapis.com/css?family=Roboto:700');
:root {
  --size: 150px;
}

body {
  font-family: 'Roboto', sans-serif;
  background-color: #FFD399;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  margin: 0 auto;
  width: 50%;
}

@keyframes rotate {
  0% {
    transform: rotateX(-37.5deg) rotateY(45deg);
  }
  50% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
  100% {
    transform: rotateX(-37.5deg) rotateY(405deg);
  }
}

.cube,
.cube * {
  position: absolute;
  width: calc(var(--size) + 1px);
  height: calc(var(--size) + 1px);
}

.sides {
  animation: rotate 3s ease infinite;
  animation-delay: 0.8s;
  transform-style: preserve-3d;
  transform: rotateX(-37.5deg) rotateY(45deg);
}

.cube .sides * {
  box-sizing: border-box;
  background-color: rgba(28, 189, 162, 0.5);
  border: calc(var(--size) / 10) solid white;
}

.cube .sides .top {
  animation: top-animation 3s ease infinite;
  animation-delay: 0;
  transform: rotateX(90deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

.cube .sides .bottom {
  animation: bottom-animation 3s ease infinite;
  animation-delay: 0;
  transform: rotateX(-90deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

.cube .sides .front {
  animation: front-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(0deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

.cube .sides .back {
  animation: back-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(-180deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

.cube .sides .left {
  animation: left-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(-90deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

.cube .sides .right {
  animation: right-animation 3s ease infinite;
  animation-delay: 100ms;
  transform: rotateY(90deg) translateZ(var(--size));
  animation-fill-mode: forwards;
  transform-origin: 50% 50%;
}

@keyframes top-animation {
  0% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateX(90deg) translateZ(var(--size));
  }
}

@keyframes bottom-animation {
  0% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateX(-90deg) translateZ(var(--size));
  }
}

@keyframes front-animation {
  0% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateY(0deg) translateZ(var(--size));
  }
}

@keyframes back-animation {
  0% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateY(-180deg) translateZ(var(--size));
  }
}

@keyframes left-animation {
  0% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateY(-90deg) translateZ(var(--size));
  }
}

@keyframes right-animation {
  0% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--size));
  }
  20% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(calc(var(--size) / 2));
  }
  70% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(calc(var(--size) / 2));
  }
  90% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--size));
  }
  100% {
    opacity: 1;
    transform: rotateY(90deg) translateZ(var(--size));
  }
}
